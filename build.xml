<?xml version="1.0"?>
<project name="havis.test.suite.runner" default="publish" xmlns:ivy="antlib:org.apache.ivy.ant">
	<!-- Eclipse configuration:
	           Java Build Path -> Source -> src/main/java
	                                     -> src/main/resources/classpath
	                                     -> src/test/java -> Output folder: ./target/test/classes
	                                     -> src/test/resources/classpath -> Output folder: ./target/test/classes
	                                     -> Allow output folders for source folders
	                                     -> Default output folder: ./target/classes
	                           -> Libraries -> all havis libs from ./target/lib/
	                                        -> all libraries from directory "lib"
	           TestNG plugin:
	             TestNG -> Output directory: /target/test/reports
	    -->
	<property file="${basedir}/build.properties" />

	<!--Properties-->
	<property name="basename" value="${ant.project.name}" />
	<property name="src.dir" location="${basedir}/src/main/java" />
	<property name="resources.dir" location="${basedir}/src/main/resources" />
	<property name="resources.dir.classpath" location="${resources.dir}/classpath" />
	<property name="lib.dir" location="${basedir}/lib" />
	<property name="build.dir" location="${basedir}/target" />
	<property name="build.dir.classes" location="${build.dir}/classes" />
	<property name="test.dir.src" location="${basedir}/src/test/java" />
	<property name="test.dir.resources" location="${basedir}/src/test/resources" />
	<property name="test.dir.build" location="${build.dir}/test" />
	<property file="${resources.dir}/MANIFEST.MF" prefix="manifest" />

	<!--classpath-->
	<path id="build.classpath">
		<fileset dir="${lib.dir}" includes="**/*.jar" />
	</path>

	<!-- Checks if the build.properties file exists 
	         and prints an error message if the file does not exist -->
	<target name="check.build.properties">
		<condition property="ivy.resolver" else="local">
			<isset property="ivy.resolver" />
		</condition>
		<fail message="Missing property 'ivy.url'. Does 'build.properties' file exists?" unless="ivy.url" />
	</target>

	<target name="clean" description="Cleans the project">
		<delete dir="${build.dir}" includeemptydirs="true" />
	</target>

	<target name="retrieve" description="">
		<ivy:retrieve />
	</target>

	<!-- Compiles the java source files -->
	<target name="compile" depends="check.build.properties, retrieve">
		<mkdir dir="${build.dir.classes}" />
		<javac destdir="${build.dir.classes}" debug="${javac.debug}" includeantruntime="false">
			<src path="${src.dir}" />
			<!--Set classpath-->
			<classpath refid="build.classpath" />
		</javac>
	</target>

	<!-- Packages the classes into a JAR file -->
	<target name="jar" depends="compile" description="Creates a JAR of the common module">
		<jar jarfile="${build.dir}/${basename}.jar" manifest="${resources.dir}/MANIFEST.MF">
			<fileset dir="${build.dir.classes}" />
		</jar>
	</target>


	<target name="publish" depends="jar" description="Publishes the JAR to the repository">
		<ivy:resolve file="${resources.dir}/ivy.xml" />

		<ivy:publish resolver="${ivy.resolver}" pubrevision="${manifest.Implementation-Version}" status="integration" overwrite="true">
			<artifacts pattern="${build.dir}/[artifact].[ext]" />
		</ivy:publish>
	</target>

</project>